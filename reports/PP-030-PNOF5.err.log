Traceback (most recent call last):
  File "/home/jfhlewyee/anaconda3/envs/jb/lib/python3.13/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "/home/jfhlewyee/anaconda3/envs/jb/lib/python3.13/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/home/jfhlewyee/anaconda3/envs/jb/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/home/jfhlewyee/anaconda3/envs/jb/lib/python3.13/asyncio/base_events.py", line 720, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "/home/jfhlewyee/anaconda3/envs/jb/lib/python3.13/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "/home/jfhlewyee/anaconda3/envs/jb/lib/python3.13/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/jfhlewyee/anaconda3/envs/jb/lib/python3.13/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import ipywidgets as widgets
from IPython.display import display

# Create a dropdown widget with tab names
tab_names = ['Tab 1', 'Tab 2', 'Tab 3']
dropdown = widgets.Dropdown(
    options=data.keys(),
    description='Set:',
    style={'description_width': 'initial'} 
)

# Create a tab layout
#tab = widgets.Tab()
#tab.children = [widgets.Output() for _ in tab_names] 
#for i, name in enumerate(tab_names):
#    tab.set_title(i, name)





# Function to update tabs based on dropdown selection
def on_dropdown_change(change):
    selected_index = tab_names.index(change['new'])
    tab.selected_index = selected_index

# Attach the callback function to the dropdown
dropdown.observe(on_dropdown_change, names='value')

# Display the dropdown and tab layout
display(dropdown, tab)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[4], line 31[0m
[1;32m     28[0m dropdown[38;5;241m.[39mobserve(on_dropdown_change, names[38;5;241m=[39m[38;5;124m'[39m[38;5;124mvalue[39m[38;5;124m'[39m)
[1;32m     30[0m [38;5;66;03m# Display the dropdown and tab layout[39;00m
[0;32m---> 31[0m display(dropdown, [43mtab[49m)

[0;31mNameError[0m: name 'tab' is not defined

